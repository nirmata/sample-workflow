apiVersion: apps/v1
kind: Deployment
metadata:
  name: insecure-deployment
  namespace: default
  labels:
    app: insecure-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: insecure-app
  template:
    metadata:
      labels:
        app: insecure-app
    spec:
      serviceAccountName: default
      containers:
      - name: insecure-container
        image: nginx:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: SECRET_KEY
          value: "hardcoded-secret-value"
        - name: DATABASE_URL
          value: "postgresql://user:password@localhost:5432/db"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: config
          mountPath: /etc/config
        - name: secrets
          mountPath: /etc/secrets
      volumes:
      - name: config
        configMap:
          name: insecure-config
      - name: secrets
        secret:
          secretName: insecure-secret
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: insecure-config
  namespace: default
data:
  config.yaml: |
    debug: true
    log_level: DEBUG
    admin_password: "admin123"
---
apiVersion: v1
kind: Secret
metadata:
  name: insecure-secret
  namespace: default
type: Opaque
data:
  password: YWRtaW4xMjM=  # base64 encoded "admin123"
  api_key: c2VjcmV0LWtleQ==  # base64 encoded "secret-key"
